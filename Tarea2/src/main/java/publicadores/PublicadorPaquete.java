
package publicadores;

import javax.xml.datatype.XMLGregorianCalendar;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "PublicadorPaquete", targetNamespace = "http://publicadores/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PublicadorPaquete {


    /**
     * 
     * @return
     *     returns publicadores.DtColecciones
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicadores/PublicadorPaquete/obtenerPaquetesConActividadesRequest", output = "http://publicadores/PublicadorPaquete/obtenerPaquetesConActividadesResponse")
    public DtColecciones obtenerPaquetesConActividades();

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @throws CompraExisteException_Exception
     * @throws PaqueteNoExisteException_Exception
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @Action(input = "http://publicadores/PublicadorPaquete/comprarPaqueteRequest", output = "http://publicadores/PublicadorPaquete/comprarPaqueteResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://publicadores/PublicadorPaquete/comprarPaquete/Fault/usuarioNoExisteException"),
        @FaultAction(className = PaqueteNoExisteException_Exception.class, value = "http://publicadores/PublicadorPaquete/comprarPaquete/Fault/paqueteNoExisteException"),
        @FaultAction(className = CompraExisteException_Exception.class, value = "http://publicadores/PublicadorPaquete/comprarPaquete/Fault/compraExisteException")
    })
    public void comprarPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        XMLGregorianCalendar arg2,
        @WebParam(name = "arg3", partName = "arg3")
        int arg3)
        throws CompraExisteException_Exception, PaqueteNoExisteException_Exception, UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @return
     *     returns publicadores.DtColecciones
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicadores/PublicadorPaquete/obtenerPaquetesDisponiblesRequest", output = "http://publicadores/PublicadorPaquete/obtenerPaquetesDisponiblesResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://publicadores/PublicadorPaquete/obtenerPaquetesDisponibles/Fault/usuarioNoExisteException")
    })
    public DtColecciones obtenerPaquetesDisponibles(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        int arg2)
        throws UsuarioNoExisteException_Exception
    ;

}
